digraph p_lanceur {
size="8,10";
  GT [shape=box,style=dotted,label="lanceur"];
  GT -> S1;
	S1 -> S11  [color=black,style=solid,label="i = 0"];
	S11 -> S3  [color=black,style=solid,label="((i<=11))"];
	S11 -> S14  [color=black,style=solid,label="else"];
	S3 -> S4  [color=black,style=bold,label="test[0].valeur[i] = test01[i]"];
	S4 -> S5  [color=black,style=bold,label="test[1].valeur[i] = test02[i]"];
	S5 -> S6  [color=black,style=bold,label="test[2].valeur[i] = test03[i]"];
	S6 -> S7  [color=black,style=bold,label="test[3].valeur[i] = test04[i]"];
	S7 -> S8  [color=black,style=bold,label="test[4].valeur[i] = test05[i]"];
	S8 -> S11  [color=black,style=solid,label="i = (i+1)"];
	S14 -> S20  [color=black,style=solid,label="i = 0"];
	S20 -> S16  [color=black,style=solid,label="((i<=(4-1)))"];
	S20 -> S23  [color=black,style=solid,label="else"];
	S16 -> S17  [color=black,style=solid,label="(run Capteur(i))"];
	S17 -> S20  [color=black,style=solid,label="i = (i+1)"];
	S23 -> S29  [color=black,style=solid,label="i = 0"];
	S29 -> S25  [color=black,style=solid,label="((i<=(3-1)))"];
	S29 -> S32  [color=black,style=solid,label="else"];
	S25 -> S26  [color=black,style=solid,label="(run Collecteur(i))"];
	S26 -> S29  [color=black,style=solid,label="i = (i+1)"];
	S32 -> S33  [color=black,style=solid,label="(run Simulateur())"];
	S33 -> S0  [color=black,style=solid,label="-end-"];
  S33 [color=blue,style=bold,shape=box];
}
digraph p_Simulateur {
size="8,10";
  GT [shape=box,style=dotted,label="Simulateur"];
  GT -> S11;
	S11 -> S9  [color=black,style=bold,label="STDIN?c"];
	S9 -> S14  [color=black,style=solid,label="((c==4))"];
	S9 -> S5  [color=black,style=solid,label="((((((c==49)||(c==50))||(c==51))||(c==52))||(c==53)))"];
	S9 -> S8  [color=black,style=solid,label="else"];
	S14 -> S0  [color=black,style=solid,label="-end-"];
  S14 [color=blue,style=bold,shape=box];
	S5 -> S6  [color=black,style=bold,label="numTest = (c-49)"];
	S6 -> S11  [color=black,style=solid,label="(run Controleur())"];
	S8 -> S11  [color=black,style=solid,label="printf('Illegal %d  ',c)"];
}
digraph p_Controleur {
size="8,10";
  GT [shape=box,style=dotted,label="Controleur"];
  GT -> S1;
	S1 -> S7  [color=black,style=solid,label="i = 0"];
	S7 -> S3  [color=black,style=solid,label="((i<=(3-1)))"];
	S7 -> S10  [color=black,style=solid,label="else"];
	S3 -> S4  [color=black,style=bold,label="in_collect[i]!0"];
	S4 -> S7  [color=black,style=solid,label="i = (i+1)"];
	S10 -> S16  [color=black,style=solid,label="i = 0"];
	S16 -> S12  [color=black,style=solid,label="((i<=(3-1)))"];
	S16 -> S19  [color=black,style=solid,label="else"];
	S12 -> S13  [color=black,style=bold,label="out_collect[i]?retourCollecteur[i]"];
	S13 -> S16  [color=black,style=solid,label="i = (i+1)"];
	S19 -> S32  [color=black,style=solid,label="i = 0"];
	S32 -> S27  [color=black,style=solid,label="((i<=(3-1)))"];
	S32 -> S35  [color=black,style=solid,label="else"];
	S27 -> S22  [color=black,style=solid,label="((retourCollecteur[i]==0))"];
	S27 -> S24  [color=black,style=solid,label="((retourCollecteur[i]==1))"];
	S27 -> S26  [color=black,style=solid,label="((retourCollecteur[i]==2))"];
	S22 -> S29  [color=black,style=solid,label="printf('Controleur reçu ALARME_TEMPERATURE du collecteur %d ',i)"];
	S29 -> S32  [color=black,style=solid,label="i = (i+1)"];
	S24 -> S29  [color=black,style=solid,label="printf('Controleur reçu TEMPERATURE_NORMALE du collecteur %d ',i)"];
	S26 -> S29  [color=black,style=solid,label="printf('Controleur reçu DEFAILLANCE_CAPTEURS du collecteur %d ',i)"];
	S35 -> S36  [color=black,style=solid,label="nbTNormale = 0"];
	S36 -> S37  [color=black,style=solid,label="nbDefail = 0"];
	S37 -> S38  [color=black,style=solid,label="nbAlarm = 0"];
	S38 -> S51  [color=black,style=solid,label="i = 0"];
	S51 -> S46  [color=black,style=solid,label="((i<=2))"];
	S51 -> S64  [color=black,style=solid,label="else"];
	S46 -> S41  [color=black,style=solid,label="((retourCollecteur[i]==0))"];
	S46 -> S43  [color=black,style=solid,label="((retourCollecteur[i]==1))"];
	S46 -> S45  [color=black,style=solid,label="((retourCollecteur[i]==2))"];
	S41 -> S48  [color=black,style=solid,label="nbAlarm = (nbAlarm+1)"];
	S48 -> S51  [color=black,style=solid,label="i = (i+1)"];
	S43 -> S48  [color=black,style=solid,label="nbTNormale = (nbTNormale+1)"];
	S45 -> S48  [color=black,style=solid,label="nbDefail = (nbDefail+1)"];
	S64 -> S55  [color=black,style=solid,label="((nbAlarm>0))"];
	S64 -> S57  [color=black,style=solid,label="((nbDefail==3))"];
	S64 -> S59  [color=black,style=solid,label="(((nbDefail==(3-1))&&(nbTNormale==1)))"];
	S64 -> S61  [color=black,style=solid,label="((((nbDefail<(3-1))&&(nbTNormale>1))&&(nbTNormale!=3)))"];
	S64 -> S63  [color=black,style=solid,label="((nbTNormale==3))"];
	S55 -> S66  [color=black,style=solid,label="printf('Baisse les barres, voyant rouge')"];
	S66 -> S0  [color=black,style=solid,label="-end-"];
  S66 [color=blue,style=bold,shape=box];
	S57 -> S66  [color=black,style=solid,label="printf('Baisse les barres, voyant rouge clignotant')"];
	S59 -> S66  [color=black,style=solid,label="printf('Baisse les barres, voyant orange')"];
	S61 -> S66  [color=black,style=solid,label="printf('voyant orange')"];
	S63 -> S66  [color=black,style=solid,label="printf('voyant vert')"];
}
digraph p_Collecteur {
size="8,10";
  GT [shape=box,style=dotted,label="Collecteur"];
  GT -> S77;
	S77 -> S2  [color=black,style=bold,label="in_collect[numCollecteur]?_"];
	S2 -> S3  [color=black,style=solid,label="printf('Collecteur %d reçu signal ',numCollecteur)"];
	S3 -> S9  [color=black,style=solid,label="i = 0"];
	S9 -> S5  [color=black,style=solid,label="((i<=(4-1)))"];
	S9 -> S12  [color=black,style=solid,label="else"];
	S5 -> S6  [color=black,style=bold,label="in_capteur[i]!0"];
	S6 -> S9  [color=black,style=solid,label="i = (i+1)"];
	S12 -> S18  [color=black,style=solid,label="i = 0"];
	S18 -> S14  [color=black,style=solid,label="((i<=(4-1)))"];
	S18 -> S21  [color=black,style=solid,label="else"];
	S14 -> S15  [color=black,style=bold,label="out_capteur[i]?valeur[i]"];
	S15 -> S18  [color=black,style=solid,label="i = (i+1)"];
	S21 -> S27  [color=black,style=solid,label="i = 0"];
	S27 -> S23  [color=black,style=solid,label="((i<=(4-1)))"];
	S27 -> S30  [color=black,style=solid,label="else"];
	S23 -> S24  [color=black,style=solid,label="printf('Collecteur %d reçu valeur %d du capteur %d ',numCollecteur,valeur[i],i)"];
	S24 -> S27  [color=black,style=solid,label="i = (i+1)"];
	S30 -> S31  [color=black,style=solid,label="valeursDifferentes[0] = valeur[0]"];
	S31 -> S32  [color=black,style=solid,label="valeursDifferentes[1] = 0"];
	S32 -> S33  [color=black,style=solid,label="nbValeurs[0] = 1"];
	S33 -> S34  [color=black,style=solid,label="nbValeurs[1] = 0"];
	S34 -> S35  [color=black,style=solid,label="dejaVuDeuxiemeValeur = 0"];
	S35 -> S36  [color=black,style=solid,label="troisCapteursIdentiques = 0"];
	S36 -> S53  [color=black,style=solid,label="i = 1"];
	S53 -> S48  [color=black,style=solid,label="((i<=(4-1)))"];
	S53 -> S64  [color=black,style=solid,label="else"];
	S48 -> S39  [color=black,style=solid,label="((valeur[i]==valeursDifferentes[0]))"];
	S48 -> S41  [color=black,style=solid,label="((dejaVuDeuxiemeValeur&&(valeur[i]==valeursDifferentes[1])))"];
	S48 -> S43  [color=black,style=solid,label="((!(dejaVuDeuxiemeValeur)&&(valeur[i]!=valeursDifferentes[0])))"];
	S48 -> S47  [color=black,style=solid,label="else"];
	S39 -> S50  [color=black,style=solid,label="nbValeurs[0] = (nbValeurs[0]+1)"];
	S50 -> S53  [color=black,style=solid,label="i = (i+1)"];
	S41 -> S50  [color=black,style=solid,label="nbValeurs[1] = (nbValeurs[1]+1)"];
	S43 -> S44  [color=black,style=solid,label="valeursDifferentes[1] = valeur[i]"];
	S44 -> S45  [color=black,style=solid,label="nbValeurs[1] = (nbValeurs[1]+1)"];
	S45 -> S50  [color=black,style=solid,label="dejaVuDeuxiemeValeur = 1"];
	S47 -> S50  [color=black,style=solid,label="(1)"];
	S64 -> S57  [color=black,style=solid,label="((nbValeurs[0]>(4-2)))"];
	S64 -> S60  [color=black,style=solid,label="((nbValeurs[1]>(4-2)))"];
	S64 -> S63  [color=black,style=solid,label="else"];
	S57 -> S58  [color=black,style=solid,label="valeurCommune = valeursDifferentes[0]"];
	S58 -> S75  [color=black,style=solid,label="troisCapteursIdentiques = 1"];
	S75 -> S71  [color=black,style=solid,label="(troisCapteursIdentiques)"];
	S75 -> S74  [color=black,style=solid,label="else"];
	S71 -> S68  [color=black,style=solid,label="((valeurCommune<450))"];
	S71 -> S70  [color=black,style=solid,label="else"];
	S68 -> S77  [color=black,style=bold,label="out_collect[numCollecteur]!1"];
	S70 -> S77  [color=black,style=bold,label="out_collect[numCollecteur]!0"];
	S74 -> S77  [color=black,style=bold,label="out_collect[numCollecteur]!2"];
	S60 -> S61  [color=black,style=solid,label="valeurCommune = valeursDifferentes[1]"];
	S61 -> S75  [color=black,style=solid,label="troisCapteursIdentiques = 1"];
	S63 -> S75  [color=black,style=solid,label="troisCapteursIdentiques = 0"];
}
digraph p_Capteur {
size="8,10";
  GT [shape=box,style=dotted,label="Capteur"];
  GT -> S5;
	S5 -> S2  [color=black,style=bold,label="in_capteur[numCapteur]?_"];
	S2 -> S3  [color=black,style=solid,label="cpt = ((cpt+1)%3)"];
	S3 -> S4  [color=black,style=bold,label="valeur = test[numTest].valeur[((3*numCapteur)+cpt)]"];
	S4 -> S5  [color=black,style=bold,label="out_capteur[numCapteur]!valeur"];
}
